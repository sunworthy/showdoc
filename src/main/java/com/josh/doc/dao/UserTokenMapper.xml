<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.josh.doc.dao.UserTokenMapper">
  <resultMap id="BaseResultMap" type="com.josh.doc.entity.UserToken">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="token" jdbcType="VARCHAR" property="token" />
    <result column="token_expire" jdbcType="INTEGER" property="tokenExpire" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
  </resultMap>

  <sql id="Base_Column_List">
    id, uid, token, token_expire, ip, add_time
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_token
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_token
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.josh.doc.entity.UserToken">
    insert into user_token (id, uid, token, 
      token_expire, ip, add_time
      )
    values (#{id,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{token,jdbcType=VARCHAR}, 
      #{tokenExpire,jdbcType=INTEGER}, #{ip,jdbcType=VARCHAR}, #{addTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.josh.doc.entity.UserToken">
    insert into user_token
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="token != null">
        token,
      </if>
      <if test="tokenExpire != null">
        token_expire,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="token != null">
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="tokenExpire != null">
        #{tokenExpire,jdbcType=INTEGER},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.josh.doc.entity.UserToken">
    update user_token
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="token != null">
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="tokenExpire != null">
        token_expire = #{tokenExpire,jdbcType=INTEGER},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.josh.doc.entity.UserToken">
    update user_token
    set uid = #{uid,jdbcType=INTEGER},
      token = #{token,jdbcType=VARCHAR},
      token_expire = #{tokenExpire,jdbcType=INTEGER},
      ip = #{ip,jdbcType=VARCHAR},
      add_time = #{addTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

</mapper>