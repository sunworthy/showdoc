<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.josh.doc.dao.ItemMapper">
  <resultMap id="BaseResultMap" type="com.josh.doc.entity.Item">
    <id column="item_id" jdbcType="INTEGER" property="itemId" />
    <result column="item_name" jdbcType="VARCHAR" property="itemName" />
    <result column="item_description" jdbcType="VARCHAR" property="itemDescription" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="last_update_time" jdbcType="TIMESTAMP" property="lastUpdateTime" />
    <result column="item_domain" jdbcType="VARCHAR" property="itemDomain" />
    <result column="item_type" jdbcType="INTEGER" property="itemType" />
    <result column="is_archived" jdbcType="INTEGER" property="isArchived" />
    <result column="is_del" jdbcType="INTEGER" property="isDel" />
  </resultMap>

  <sql id="Base_Column_List">
    item_id, item_name, item_description, uid, username, password, add_time, last_update_time, 
    item_domain, item_type, is_archived, is_del
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from item
    where item_id = #{itemId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from item
    where item_id = #{itemId,jdbcType=INTEGER}
  </delete>

  <select id="selectByUid" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from item
    where uid = #{uid}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from item
    where item_id = #{itemId,jdbcType=INTEGER}
  </delete>


  <insert id="insert" parameterType="com.josh.doc.entity.Item">
    insert into item (item_id, item_name, item_description, 
      uid, username, password, 
      add_time, last_update_time, item_domain, 
      item_type, is_archived, is_del
      )
    values (#{itemId,jdbcType=INTEGER}, #{itemName,jdbcType=VARCHAR}, #{itemDescription,jdbcType=VARCHAR}, 
      #{uid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{addTime,jdbcType=TIMESTAMP}, #{lastUpdateTime,jdbcType=TIMESTAMP}, #{itemDomain,jdbcType=VARCHAR}, 
      #{itemType,jdbcType=INTEGER}, #{isArchived,jdbcType=INTEGER}, #{isDel,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.josh.doc.entity.Item">
    insert into item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="itemId != null">
        item_id,
      </if>
      <if test="itemName != null">
        item_name,
      </if>
      <if test="itemDescription != null">
        item_description,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="lastUpdateTime != null">
        last_update_time,
      </if>
      <if test="itemDomain != null">
        item_domain,
      </if>
      <if test="itemType != null">
        item_type,
      </if>
      <if test="isArchived != null">
        is_archived,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="itemId != null">
        #{itemId,jdbcType=INTEGER},
      </if>
      <if test="itemName != null">
        #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="itemDescription != null">
        #{itemDescription,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateTime != null">
        #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="itemDomain != null">
        #{itemDomain,jdbcType=VARCHAR},
      </if>
      <if test="itemType != null">
        #{itemType,jdbcType=INTEGER},
      </if>
      <if test="isArchived != null">
        #{isArchived,jdbcType=INTEGER},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.josh.doc.entity.Item">
    update item
    <set>
      <if test="itemName != null">
        item_name = #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="itemDescription != null">
        item_description = #{itemDescription,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateTime != null">
        last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="itemDomain != null">
        item_domain = #{itemDomain,jdbcType=VARCHAR},
      </if>
      <if test="itemType != null">
        item_type = #{itemType,jdbcType=INTEGER},
      </if>
      <if test="isArchived != null">
        is_archived = #{isArchived,jdbcType=INTEGER},
      </if>
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=INTEGER},
      </if>
    </set>
    where item_id = #{itemId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.josh.doc.entity.Item">
    update item
    set item_name = #{itemName,jdbcType=VARCHAR},
      item_description = #{itemDescription,jdbcType=VARCHAR},
      uid = #{uid,jdbcType=INTEGER},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      item_domain = #{itemDomain,jdbcType=VARCHAR},
      item_type = #{itemType,jdbcType=INTEGER},
      is_archived = #{isArchived,jdbcType=INTEGER},
      is_del = #{isDel,jdbcType=INTEGER}
    where item_id = #{itemId,jdbcType=INTEGER}
  </update>
</mapper>