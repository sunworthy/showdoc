<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.josh.doc.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.josh.doc.entity.User">
    <id column="uid" jdbcType="INTEGER" property="uid" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="groupid" jdbcType="INTEGER" property="groupid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="avatar_small" jdbcType="VARCHAR" property="avatarSmall" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="cookie_token_expire" jdbcType="VARCHAR" property="cookieTokenExpire" />
    <result column="reg_time" jdbcType="TIMESTAMP" property="regTime" />
    <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.josh.doc.entity.User">
    <result column="cookie_token" jdbcType="LONGVARBINARY" property="cookieToken" />
  </resultMap>
  <sql id="Base_Column_List">
    uid, username, groupid, name, avatar, avatar_small, email, password, cookie_token_expire, 
    reg_time, last_login_time
  </sql>
  <sql id="Blob_Column_List">
    cookie_token
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from user
    where uid = #{uid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where uid = #{uid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.josh.doc.entity.User">
    insert into user (uid, username, groupid, 
      name, avatar, avatar_small, 
      email, password, cookie_token_expire, 
      reg_time, last_login_time, cookie_token
      )
    values (#{uid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{groupid,jdbcType=INTEGER}, 
      #{name,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR}, #{avatarSmall,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{cookieTokenExpire,jdbcType=VARCHAR}, 
      #{regTime,jdbcType=TIMESTAMP}, #{lastLoginTime,jdbcType=TIMESTAMP}, #{cookieToken,jdbcType=LONGVARBINARY}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.josh.doc.entity.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        uid,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="groupid != null">
        groupid,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="avatarSmall != null">
        avatar_small,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="cookieTokenExpire != null">
        cookie_token_expire,
      </if>
      <if test="regTime != null">
        reg_time,
      </if>
      <if test="lastLoginTime != null">
        last_login_time,
      </if>
      <if test="cookieToken != null">
        cookie_token,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="groupid != null">
        #{groupid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="avatarSmall != null">
        #{avatarSmall,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="cookieTokenExpire != null">
        #{cookieTokenExpire,jdbcType=VARCHAR},
      </if>
      <if test="regTime != null">
        #{regTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime != null">
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cookieToken != null">
        #{cookieToken,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.josh.doc.entity.User">
    update user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="groupid != null">
        groupid = #{groupid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="avatarSmall != null">
        avatar_small = #{avatarSmall,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="cookieTokenExpire != null">
        cookie_token_expire = #{cookieTokenExpire,jdbcType=VARCHAR},
      </if>
      <if test="regTime != null">
        reg_time = #{regTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime != null">
        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cookieToken != null">
        cookie_token = #{cookieToken,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.josh.doc.entity.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      groupid = #{groupid,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      avatar_small = #{avatarSmall,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      cookie_token_expire = #{cookieTokenExpire,jdbcType=VARCHAR},
      reg_time = #{regTime,jdbcType=TIMESTAMP},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      cookie_token = #{cookieToken,jdbcType=LONGVARBINARY}
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.josh.doc.entity.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      groupid = #{groupid,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      avatar_small = #{avatarSmall,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      cookie_token_expire = #{cookieTokenExpire,jdbcType=VARCHAR},
      reg_time = #{regTime,jdbcType=TIMESTAMP},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP}
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.josh.doc.entity.User">
    <id column="uid" jdbcType="INTEGER" property="uid" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="groupid" jdbcType="INTEGER" property="groupid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="avatar_small" jdbcType="VARCHAR" property="avatarSmall" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="cookie_token_expire" jdbcType="VARCHAR" property="cookieTokenExpire" />
    <result column="reg_time" jdbcType="TIMESTAMP" property="regTime" />
    <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.josh.doc.entity.User">
    <result column="cookie_token" jdbcType="LONGVARBINARY" property="cookieToken" />
  </resultMap>
  <sql id="Base_Column_List">
    uid, username, groupid, name, avatar, avatar_small, email, password, cookie_token_expire, 
    reg_time, last_login_time
  </sql>
  <sql id="Blob_Column_List">
    cookie_token
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from user
    where uid = #{uid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where uid = #{uid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.josh.doc.entity.User">
    insert into user (uid, username, groupid, 
      name, avatar, avatar_small, 
      email, password, cookie_token_expire, 
      reg_time, last_login_time, cookie_token
      )
    values (#{uid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{groupid,jdbcType=INTEGER}, 
      #{name,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR}, #{avatarSmall,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{cookieTokenExpire,jdbcType=VARCHAR}, 
      #{regTime,jdbcType=TIMESTAMP}, #{lastLoginTime,jdbcType=TIMESTAMP}, #{cookieToken,jdbcType=LONGVARBINARY}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.josh.doc.entity.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        uid,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="groupid != null">
        groupid,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="avatarSmall != null">
        avatar_small,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="cookieTokenExpire != null">
        cookie_token_expire,
      </if>
      <if test="regTime != null">
        reg_time,
      </if>
      <if test="lastLoginTime != null">
        last_login_time,
      </if>
      <if test="cookieToken != null">
        cookie_token,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="groupid != null">
        #{groupid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="avatarSmall != null">
        #{avatarSmall,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="cookieTokenExpire != null">
        #{cookieTokenExpire,jdbcType=VARCHAR},
      </if>
      <if test="regTime != null">
        #{regTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime != null">
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cookieToken != null">
        #{cookieToken,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.josh.doc.entity.User">
    update user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="groupid != null">
        groupid = #{groupid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="avatarSmall != null">
        avatar_small = #{avatarSmall,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="cookieTokenExpire != null">
        cookie_token_expire = #{cookieTokenExpire,jdbcType=VARCHAR},
      </if>
      <if test="regTime != null">
        reg_time = #{regTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime != null">
        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cookieToken != null">
        cookie_token = #{cookieToken,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.josh.doc.entity.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      groupid = #{groupid,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      avatar_small = #{avatarSmall,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      cookie_token_expire = #{cookieTokenExpire,jdbcType=VARCHAR},
      reg_time = #{regTime,jdbcType=TIMESTAMP},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      cookie_token = #{cookieToken,jdbcType=LONGVARBINARY}
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.josh.doc.entity.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      groupid = #{groupid,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      avatar_small = #{avatarSmall,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      cookie_token_expire = #{cookieTokenExpire,jdbcType=VARCHAR},
      reg_time = #{regTime,jdbcType=TIMESTAMP},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP}
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.josh.doc.entity.User">
    <id column="uid" jdbcType="INTEGER" property="uid" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="groupid" jdbcType="INTEGER" property="groupid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="avatar_small" jdbcType="VARCHAR" property="avatarSmall" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="cookie_token_expire" jdbcType="VARCHAR" property="cookieTokenExpire" />
    <result column="reg_time" jdbcType="TIMESTAMP" property="regTime" />
    <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.josh.doc.entity.User">
    <result column="cookie_token" jdbcType="LONGVARBINARY" property="cookieToken" />
  </resultMap>
  <sql id="Base_Column_List">
    uid, username, groupid, name, avatar, avatar_small, email, password, cookie_token_expire, 
    reg_time, last_login_time
  </sql>
  <sql id="Blob_Column_List">
    cookie_token
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from user
    where uid = #{uid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where uid = #{uid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.josh.doc.entity.User">
    insert into user (uid, username, groupid, 
      name, avatar, avatar_small, 
      email, password, cookie_token_expire, 
      reg_time, last_login_time, cookie_token
      )
    values (#{uid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{groupid,jdbcType=INTEGER}, 
      #{name,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR}, #{avatarSmall,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{cookieTokenExpire,jdbcType=VARCHAR}, 
      #{regTime,jdbcType=TIMESTAMP}, #{lastLoginTime,jdbcType=TIMESTAMP}, #{cookieToken,jdbcType=LONGVARBINARY}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.josh.doc.entity.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        uid,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="groupid != null">
        groupid,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="avatarSmall != null">
        avatar_small,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="cookieTokenExpire != null">
        cookie_token_expire,
      </if>
      <if test="regTime != null">
        reg_time,
      </if>
      <if test="lastLoginTime != null">
        last_login_time,
      </if>
      <if test="cookieToken != null">
        cookie_token,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="groupid != null">
        #{groupid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="avatarSmall != null">
        #{avatarSmall,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="cookieTokenExpire != null">
        #{cookieTokenExpire,jdbcType=VARCHAR},
      </if>
      <if test="regTime != null">
        #{regTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime != null">
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cookieToken != null">
        #{cookieToken,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.josh.doc.entity.User">
    update user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="groupid != null">
        groupid = #{groupid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="avatarSmall != null">
        avatar_small = #{avatarSmall,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="cookieTokenExpire != null">
        cookie_token_expire = #{cookieTokenExpire,jdbcType=VARCHAR},
      </if>
      <if test="regTime != null">
        reg_time = #{regTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime != null">
        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cookieToken != null">
        cookie_token = #{cookieToken,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.josh.doc.entity.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      groupid = #{groupid,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      avatar_small = #{avatarSmall,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      cookie_token_expire = #{cookieTokenExpire,jdbcType=VARCHAR},
      reg_time = #{regTime,jdbcType=TIMESTAMP},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      cookie_token = #{cookieToken,jdbcType=LONGVARBINARY}
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.josh.doc.entity.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      groupid = #{groupid,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      avatar_small = #{avatarSmall,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      cookie_token_expire = #{cookieTokenExpire,jdbcType=VARCHAR},
      reg_time = #{regTime,jdbcType=TIMESTAMP},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP}
    where uid = #{uid,jdbcType=INTEGER}
  </update>
</mapper>